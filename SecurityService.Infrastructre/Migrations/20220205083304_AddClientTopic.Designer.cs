// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecuritySystem.Infrastructre;

#nullable disable

namespace SecuritySystem.Infrastructre.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220205083304_AddClientTopic")]
    partial class AddClientTopic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("SecuritySystem.Domain.Camera.IPCamera", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CameraName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("HostAddress")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreamAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IPCameras", (string)null);
                });

            modelBuilder.Entity("SecuritySystem.Domain.ClientAgg.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("SecuritySystem.Domain.RtspHostPathAgg.RtspHostPath", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RtspHostPath", (string)null);
                });

            modelBuilder.Entity("SecuritySystem.Domain.ClientAgg.Client", b =>
                {
                    b.OwnsMany("SecuritySystem.Domain.ClientAgg.ClientTopic", "ClientTopics", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Caption")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("TEXT");

                            b1.Property<string>("ClientId")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("CreationDate")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Topic")
                                .IsRequired()
                                .HasMaxLength(128)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("ClientId");

                            b1.ToTable("ClientTopics", (string)null);

                            b1.WithOwner("Client")
                                .HasForeignKey("ClientId")
                                .HasPrincipalKey("ClientId");

                            b1.Navigation("Client");
                        });

                    b.Navigation("ClientTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
